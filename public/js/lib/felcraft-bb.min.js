!function(a,b,c){FC.Characters=Backbone.Collection.extend({model:FC.Character})}(window,jQuery,_),function(a,b,c){FC.Character=Backbone.Model.extend({defaults:{region:"eu",server:"frostwhisper",name:"coryn",isVerified:!1,items:[],talents:[],glyphs:[],last_optimised:null},verify:function(){var a=this;console.log("Verifying ",a.name," character..."),b.ajax({url:"/character/verify",success:function(b,c){console.log("Character confirmed. OK!"),a.set({isVerified:!0})},error:function(a){console.log("Failed to verify character: ",a)}})}})}(window,jQuery,_),function(a,b,c){FC.CharacterView=Backbone.View.extend({el:"#content",template:c.template(b("#charTemplate").html()),initialize:function(a){this.model=a,this.model.on("change:isVerified",this.verifyChanged,this),this.model.verify()},verifyChanged:function(){this.render(),this.$el.append('<span style="color: yellow">VERFICATION SERVER RESPONDED: '+this.model.get("isVerified")+"</span>")},render:function(){return this.$el.html(this.template(this.model.attributes)),this}})}(window,jQuery,_),function(a,b,c){FC.CharactersView=Backbone.View.extend({el:"#content",initialize:function(a){this.collection=new FC.Characters(a),this.render()},render:function(){this.collection.each(function(a){this.renderChar(a)},this)},renderChar:function(a){var b=new FC.CharacterView({model:a});this.$el.append(b.render().el)}})}(window,jQuery,_),function(a,b,c){FC.NewCharSplashView=Backbone.View.extend({el:"#content",template:c.template(b("#newCharSplash").html()),initialize:function(a){this.model=new FC.Character(a),this.render()},render:function(){return this.$el.html(this.template()),this}})}(window,jQuery,_);